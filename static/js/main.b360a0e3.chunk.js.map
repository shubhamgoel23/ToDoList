{"version":3,"sources":["ToDo.js","NewTodoForm.js","ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["ToDo","props","state","isEditing","task","handleRemove","bind","toggleForm","handleUpdate","handleChange","evt","preventDefault","this","updateTodo","id","setState","target","name","value","removeTodo","onSubmit","type","onChange","onClick","Component","NewTodoForm","handleSubmit","createTodo","uuid","htmlFor","placeholder","ToDoList","todos","create","remove","update","newTodo","updatedTask","updateTodos","map","todo","filter","t","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b360a0e3.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass ToDo extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isEditing: false,\r\n            task: this.props.task\r\n        }\r\n        this.handleRemove = this.handleRemove.bind(this);\r\n        this.toggleForm = this.toggleForm.bind(this);\r\n        this.handleUpdate = this.handleUpdate.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleUpdate(evt){\r\n        evt.preventDefault();\r\n        this.props.updateTodo(this.props.id, this.state.task)\r\n        this.toggleForm()\r\n    }\r\n\r\n    handleChange(evt){\r\n        this.setState({\r\n            [evt.target.name]:evt.target.value\r\n        })\r\n    }\r\n\r\n    toggleForm(){\r\n        this.setState({\r\n            isEditing: !this.state.isEditing\r\n        })\r\n    }\r\n\r\n    handleRemove(){\r\n        this.props.removeTodo(this.props.id);\r\n    }\r\n    render(){\r\n        let result;\r\n        if(this.state.isEditing){\r\n            result = (\r\n                <div>\r\n                    <form onSubmit={this.handleUpdate} >\r\n                        <input \r\n                            type='text' \r\n                            value={this.state.task} \r\n                            name='task' \r\n                            onChange={this.handleChange} \r\n                        />\r\n                        <button>Save</button>\r\n                    </form>\r\n                </div>\r\n            )\r\n        } else {\r\n            result = (\r\n                <div>\r\n                <button onClick={this.toggleForm} >Edit</button>\r\n                <button onClick={this.handleRemove} >X</button>\r\n                <li>{this.props.task}</li>\r\n            </div>\r\n            )\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport default ToDo","import React, { Component } from 'react'\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n\r\nclass NewTodoForm extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {task:\"\"};\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(evt){\r\n        this.setState({\r\n            [evt.target.name]: evt.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit(evt){\r\n        evt.preventDefault();\r\n        this.props.createTodo({...this.state,id:uuid()});\r\n        this.setState({\r\n            task:\"\"\r\n        });\r\n    }\r\n\r\n    render() {\r\n         return(\r\n             <form onSubmit ={this.handleSubmit} >\r\n                 <label htmlFor=\"task\" >New Todo</label>\r\n                 <input type=\"text\"\r\n                     placeholder=\"New Todo\" \r\n                     id=\"task\" \r\n                     name='task'\r\n                     value={this.state.task} \r\n                     onChange={this.handleChange}\r\n                 />\r\n                 <button>Add Todo</button>\r\n\r\n             </form>\r\n         )\r\n    }\r\n}\r\n\r\nexport default NewTodoForm","import React, { Component } from 'react'\r\nimport ToDo from './ToDo'\r\nimport NewTodoForm from './NewTodoForm'\r\n\r\nclass ToDoList extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            todos: []\r\n        };\r\n        this.create = this.create.bind(this);\r\n        this.remove = this.remove.bind(this);\r\n        this.update = this.update.bind(this);\r\n    }\r\n\r\n    create(newTodo){\r\n        this.setState({\r\n            todos: [...this.state.todos, newTodo]\r\n        });\r\n    }\r\n\r\n    update(id, updatedTask){\r\n        const updateTodos = this.state.todos.map(todo => {\r\n            if(todo.id === id){\r\n                return {...todo, task: updatedTask}\r\n            }\r\n            return todo;\r\n        })\r\n\r\n        this.setState({\r\n            todos: updateTodos\r\n        })\r\n\r\n    }\r\n\r\n    remove(id){\r\n        this.setState({\r\n            todos: this.state.todos.filter(t => t.id !==id)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const todos = this.state.todos.map(todo => {\r\n            return <ToDo \r\n                    key={todo.id} \r\n                    id={todo.id} \r\n                    task={todo.task} \r\n                    removeTodo = {this.remove} \r\n                    updateTodo = {this.update}\r\n                    />\r\n        })\r\n        return (\r\n            <div>\r\n                <h1>ToDo List!</h1>\r\n                <NewTodoForm createTodo={this.create} />\r\n                {todos}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToDoList;","import ToDoList from './ToDoList'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToDoList />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}